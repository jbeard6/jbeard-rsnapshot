#################################################
# rsnapshot.conf - rsnapshot configuration file #
#################################################
#                                               #
# PLEASE BE AWARE OF THE FOLLOWING RULES:       #
#                                               #
# This file requires tabs between elements      #
#                                               #
# Directories require a trailing slash:         #
#   right: /home/                               #
#   wrong: /home                                #
#                                               #
#################################################

#######################
# CONFIG FILE VERSION #
#######################

config_version	<%= @config_version %>

###########################
# SNAPSHOT ROOT DIRECTORY #
###########################

# All snapshots will be stored under this root directory.
#
snapshot_root	<%= @snapshot_dir %>

# If no_create_root is enabled, rsnapshot will not automatically create the
# snapshot_root directory. This is particularly useful if you are backing
# up to removable media, such as a FireWire or USB drive.
#
<% if defined?(@create_root) -%>
no_create_root <%= @create_root? "1" : "0" %>
<% else -%>
#no_create_root	1
<% end -%>

#################################
# EXTERNAL PROGRAM DEPENDENCIES #
#################################

# LINUX USERS:   Be sure to uncomment "cmd_cp". This gives you extra features.
# EVERYONE ELSE: Leave "cmd_cp" commented out for compatibility.
#
# See the README file or the man page for more details.
#
<% if defined?(@cp_cmd) -%>
cmd_cp		<%= @cp_cmd %>
<% else -%>
#cmd_cp		/bin/cp
<% end -%>

# uncomment this to use the rm program instead of the built-in perl routine.
#
<% if defined?(@rm_cmd) -%>
cmd_rm		<%= @rm_cmd %>
<% else -%>
#cmd_rm		/bin/rm
<% end -%>

# rsync must be enabled for anything to work. This is the only command that
# must be enabled.
#
cmd_rsync	<%= @rsync_cmd %>

# Uncomment this to enable remote ssh backups over rsync.
#
<% if defined?(@ssh_cmd) -%>
cmd_ssh		<%= @ssh_cmd %>
<% else -%>
#cmd_ssh	/usr/bin/ssh
<% end -%>

# Comment this out to disable syslog support.
#
<% if defined?(@logger_cmd) -%>
cmd_logger  <%= @logger_cmd %>
<% else -%>
#cmd_logger	/usr/bin/logger
<% end -%>

# Uncomment this to specify the path to "du" for disk usage checks.
# If you have an older version of "du", you may also want to check the
# "du_args" parameter below.
#
<% if defined?(@du_cmd) -%>
cmd_du      <%= @du_cmd %>
<% else -%>
#cmd_du		/usr/bin/du
<% end -%>

# Uncomment this to specify the path to rsnapshot-diff.
#
<% if defined?(@rsnapshot_diff_cmd) -%>
cmd_rsnapshot_diff	<%= @rsnapshot_diff_cmd %>
<% else -%>
#cmd_rsnapshot_diff	/usr/local/bin/rsnapshot-diff
<% end -%>

# Specify the path to a script (and any optional arguments) to run right
# before rsnapshot syncs files
#
<% if defined?(@preexec_cmd) -%>
cmd_preexec     <%= @preexec_cmd %>
<% else -%>
#cmd_preexec	/path/to/preexec/script
<% end -%>

# Specify the path to a script (and any optional arguments) to run right
# after rsnapshot syncs files
#
<% if defined?(@postexec_cmd) -%>
cmd_postexec    <%= @postexec_cmd %>
<% else -%>
#cmd_postexec	/path/to/postexec/script
<% end -%>

#########################################
#           BACKUP INTERVALS            #
# Must be unique and in ascending order #
# i.e. hourly, daily, weekly, etc.      #
#########################################

<% if defined?(@interval_hourly) -%>
interval    hourly  <%= @interval_hourly %>
<% end -%>
<% if defined?(@interval_daily) -%>
interval	daily	<%= @interval_daily %>
<% end -%>
<% if defined?(@interval_weekly) -%>
interval	weekly	<%= @interval_weekly %>
<% end -%>
<% if defined?(@interval_monthly) -%>
interval	monthly <%= @interval_monthly %>
<% end -%>

############################################
#              GLOBAL OPTIONS              #
# All are optional, with sensible defaults #
############################################

# Verbose level, 1 through 5.
# 1     Quiet           Print fatal errors only
# 2     Default         Print errors and warnings only
# 3     Verbose         Show equivalent shell commands being executed
# 4     Extra Verbose   Show extra verbose information
# 5     Debug mode      Everything
#
verbose		<%= @verbosity %>

# Same as "verbose" above, but controls the amount of data sent to the
# logfile, if one is being used. The default is 3.
#
loglevel	<%= @log_level %>

# If you enable this, data will be written to the file you specify. The
# amount of data written is controlled by the "loglevel" parameter.
#
logfile	<%= @log_file %>

# If enabled, rsnapshot will write a lockfile to prevent two instances
# from running simultaneously (and messing up the snapshot_root).
# If you enable this, make sure the lockfile directory is not world
# writable. Otherwise anyone can prevent the program from running.
#
lockfile	<%= @pid_file %>

# Default rsync args. All rsync commands have at least these options set.
#
#rsync_short_args	-a
#rsync_long_args	--delete --numeric-ids --relative --delete-excluded

# ssh has no args passed by default, but you can specify some here.
#
#ssh_args	-p 22

# Default arguments for the "du" program (for disk space reporting).
# The GNU version of "du" is preferred. See the man page for more details.
# If your version of "du" doesn't support the -h flag, try -k flag instead.
#
#du_args	-csh

# If this is enabled, rsync won't span filesystem partitions within a
# backup point. This essentially passes the -x option to rsync.
# The default is 0 (off).
#
#one_fs		0

# The include and exclude parameters, if enabled, simply get passed directly
# to rsync. If you have multiple include/exclude patterns, put each one on a
# separate line. Please look up the --include and --exclude options in the
# rsync man page for more details on how to specify file name patterns. 
# 
<% if defined?(@include) -%>
<%  if @include.is_a?(Array) -%>
<%      @include.each do |pattern| -%>
include     <%= @pattern %>
<%      end -%>
<%  else -%>
include     <%= @include %>
<%  end -%>
<% end -%>
<% if defined?(@exclude) -%>
<%  if @exclude.is_a?(Array) -%>
<%      @exclude.each do |pattern| -%>
exclude     <%= @pattern %>
<%      end -%>
<%  else -%>
exclude     <%= @exclude %>
<%  end -%>
<% end -%>

# The include_file and exclude_file parameters, if enabled, simply get
# passed directly to rsync. Please look up the --include-from and
# --exclude-from options in the rsync man page for more details.
#
#include_file	/path/to/include/file
#exclude_file	/path/to/exclude/file

# If your version of rsync supports --link-dest, consider enable this.
# This is the best way to support special files (FIFOs, etc) cross-platform.
# The default is 0 (off).
#
#link_dest	0

# When sync_first is enabled, it changes the default behaviour of rsnapshot.
# Normally, when rsnapshot is called with its lowest interval
# (i.e.: "rsnapshot hourly"), it will sync files AND rotate the lowest
# intervals. With sync_first enabled, "rsnapshot sync" handles the file sync,
# and all interval calls simply rotate files. See the man page for more
# details. The default is 0 (off).
#
#sync_first	0

# If enabled, rsnapshot will move the oldest directory for each interval
# to [interval_name].delete, then it will remove the lockfile and delete
# that directory just before it exits. The default is 0 (off).
#
#use_lazy_deletes	0

# Number of rsync re-tries. If you experience any network problems or
# network card issues that tend to cause ssh to crap-out with
# "Corrupted MAC on input" errors, for example, set this to a non-zero
# value to have the rsync operation re-tried
#
#rsync_numtries 0

###############################
### BACKUP POINTS / SCRIPTS ###
###############################

# LOCALHOST
backup	/home/		localhost/
backup	/etc/		localhost/
backup	/usr/local/	localhost/
#backup	/var/log/rsnapshot		localhost/
#backup	/etc/passwd	localhost/
#backup	/home/foo/My Documents/		localhost/
#backup	/foo/bar/	localhost/	one_fs=1, rsync_short_args=-urltvpog
#backup_script	/usr/local/bin/backup_pgsql.sh	localhost/postgres/

# EXAMPLE.COM
#backup_script	/bin/date "+ backup of example.com started at %c"	unused1
#backup	root@example.com:/home/	example.com/	+rsync_long_args=--bwlimit=16,exclude=core
#backup	root@example.com:/etc/	example.com/	exclude=mtab,exclude=core
#backup_script	ssh root@example.com "mysqldump -A > /var/db/dump/mysql.sql"	unused2
#backup	root@example.com:/var/db/dump/	example.com/
#backup_script	/bin/date	"+ backup of example.com ended at %c"	unused9

# CVS.SOURCEFORGE.NET
#backup_script	/usr/local/bin/backup_rsnapshot_cvsroot.sh	rsnapshot.cvs.sourceforge.net/

# RSYNC.SAMBA.ORG
#backup	rsync://rsync.samba.org/rsyncftp/	rsync.samba.org/rsyncftp/

